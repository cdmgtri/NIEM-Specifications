
# Template:  (the `resources` and `issue tracker` fields are optional)

# -
#   id:
#   name:
#   repo:
#   landingPage:
#   issueTracker:
#   tutorial:
#   changeHistory:
#   description:
#   note:

-
  id: NDR
  name: Naming and Design Rules (NDR) Specification
  repo: https://github.com/NIEM/NIEM-NDR
  landingPage: https://niem.github.io/NIEM-NDR/
  issueTracker: https://github.com/NIEM/NIEM-NDR/projects/1
  tutorial: https://niem.github.io/reference/specifications/ndr/
  changeHistory:
  description: The [NIEM Naming and Design Rules (NDR) Specification](https://niem.github.io/NIEM-NDR/) describe the architecture of the NIEM data model and its representation in XML. It specifies principles and enforceable rules for NIEM data components and schemas.
-
  id: IEPD
  name: Information Exchange Package Documentation
  repo: https://github.com/NIEM/MPD-Spec
  landingPage: https://reference.niem.gov/niem/specification/model-package-description/
  issueTracker: https://github.com/NIEM/MPD-Spec/projects/1
  tutorial: https://niem.github.io/reference/specifications/mpd/
  changeHistory:
  description: The [NIEM Information Exchange Package Documentation (IEPD) Specification](https://niem.github.io/MPD-Spec/) specifies normative rules and non-normative guidance for building NIEM information exchange messages. It defines IEPD artifacts like subset schemas, extension schemas, and MPD catalogs; and recommends how the package should be structured.
  note: This specification was formerly known as the **NIEM Model Package Description (MPD) Specification**
-
  id: JSON
  name: NIEM JSON Specification
  repo: https://github.com/NIEM/NIEM-JSON-Spec
  landingPage: https://niem.github.io/NIEM-JSON-Spec/
  issueTracker: https://github.com/NIEM/NIEM-JSON-Spec/projects/1
  tutorial:
  changeHistory:
  description: The [NIEM JSON Specification](https://niem.github.io/NIEM-JSON-Spec/) establishes the technical basis for using JavaScript Object Notation (JSON) as a data format for exchange of information consistent with NIEM-conformant schemas and message specifications.
-
  id: CodeLists
  name: Code Lists Specification
  repo: https://github.com/NIEM/NIEM-Code-Lists-Spec
  landingPage: https://github.com/NIEM/NIEM-Code-Lists-Spec
  issueTracker: https://github.com/NIEM/NIEM-Code-Lists-Spec/projects/1
  tutorial: https://niem.github.io/reference/specifications/code-lists/
  changeHistory:
  description: The NIEM Code Lists Specification adds support for new capabilities of NIEM code lists beyond the basic enumeration representations provided by XML and JSON schema (simple sets of fixed-schema code values and definitions).  Key features include the definition of codes in CSV or Genericode files, dynamic code lists via run-time binding, and multi-column code table support.
-
  id: Conformance
  name: NIEM Conformance Specification
  repo: https://github.com/NIEM/NIEM-Conformance-Spec
  landingPage: https://niem.github.io/NIEM-Conformance-Spec/
  issueTracker:
  tutorial: https://niem.github.io/reference/specifications/conformance/
  changeHistory:
  description: The [NIEM Conformance Specification](https://niem.github.io/NIEM-Conformance-Spec/) introduces the idea of NIEM conformance and provides a general normative definition for its meaning, how it applies, and to what it does and does not apply. It describes the benefits of conformance, and refers to sources of information, tools, and help.
-
  id: CTAS
  name: Conformance Targets Attribute Specification
  repo: https://github.com/NIEM/NIEM-Conformance-Targets-Attribute-Spec
  landingPage: https://reference.niem.gov/niem/specification/conformance-targets-attribute/
  issueTracker:
  tutorial: https://niem.github.io/reference/specifications/conformance-targets/
  changeHistory:
  description: The NIEM Conformance Targets Attribute Specification (CTAS) defines how NIEM XML documents indicate what kind of artifact they are through the use of a conformance targets attribute.
